// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";

export class ApproveInstruction {
  static encode(message: ApproveInstruction, writer: Writer): void {
    writer.uint32(8);
    writer.uint64(message.amount);

    writer.uint32(16);
    writer.uint32(message.decimals);
  }

  static decode(reader: Reader, length: i32): ApproveInstruction {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new ApproveInstruction();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.amount = reader.uint64();
          break;

        case 2:
          message.decimals = reader.uint32();
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  amount: u64;
  decimals: u32;

  constructor(amount: u64 = 0, decimals: u32 = 0) {
    this.amount = amount;
    this.decimals = decimals;
  }
}
