// Code generated by protoc-gen-as. DO NOT EDIT.
// Versions:
//   protoc-gen-as v1.3.3

import { Writer, Reader } from "as-proto/assembly";
import { MintToInstruction } from "./MintTo/MintToInstruction";
import { MintToAccounts } from "./MintTo/MintToAccounts";

export class MintTo {
  static encode(message: MintTo, writer: Writer): void {
    const instruction = message.instruction;
    if (instruction !== null) {
      writer.uint32(10);
      writer.fork();
      MintToInstruction.encode(instruction, writer);
      writer.ldelim();
    }

    const accounts = message.accounts;
    if (accounts !== null) {
      writer.uint32(18);
      writer.fork();
      MintToAccounts.encode(accounts, writer);
      writer.ldelim();
    }
  }

  static decode(reader: Reader, length: i32): MintTo {
    const end: usize = length < 0 ? reader.end : reader.ptr + length;
    const message = new MintTo();

    while (reader.ptr < end) {
      const tag = reader.uint32();
      switch (tag >>> 3) {
        case 1:
          message.instruction = MintToInstruction.decode(
            reader,
            reader.uint32()
          );
          break;

        case 2:
          message.accounts = MintToAccounts.decode(reader, reader.uint32());
          break;

        default:
          reader.skipType(tag & 7);
          break;
      }
    }

    return message;
  }

  instruction: MintToInstruction | null;
  accounts: MintToAccounts | null;

  constructor(
    instruction: MintToInstruction | null = null,
    accounts: MintToAccounts | null = null
  ) {
    this.instruction = instruction;
    this.accounts = accounts;
  }
}
